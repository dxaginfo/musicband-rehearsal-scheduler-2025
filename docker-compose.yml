version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rehearsal-scheduler-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME:-rehearsal_scheduler}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: rehearsal-scheduler-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - app-network

  # Backend API
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: rehearsal-scheduler-api
    volumes:
      - ./server:/app
      - /app/node_modules
    ports:
      - "${API_PORT:-5000}:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-rehearsal_scheduler}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-a_very_secure_secret_key_for_development}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    restart: unless-stopped
    networks:
      - app-network

  # Frontend React App
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: rehearsal-scheduler-client
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "${CLIENT_PORT:-3000}:3000"
    depends_on:
      - api
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:5000/api}
    restart: unless-stopped
    networks:
      - app-network

# Persistent volumes
volumes:
  postgres_data:
  redis_data:

# Network configuration
networks:
  app-network:
    driver: bridge